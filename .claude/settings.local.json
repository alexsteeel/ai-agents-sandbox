{
  "permissions": {
    "allow": [
      "Bash(find:*)",
      "Bash(git commit:*)",
      "Bash(git config:*)",
      "Bash(git reset:*)",
      "Bash(git add:*)",
      "Bash(chmod:*)",
      "Bash(ls:*)",
      "WebFetch(domain:docs.anthropic.com)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:apidog.com)",
      "Bash(docker:*)",
      "Bash(./.devcontainer/setup-pycharm.sh:*)",
      "Bash(nc:*)",
      "Bash(ssh:*)",
      "Bash(true)",
      "Bash(./.devcontainer/initialize.sh:*)",
      "Bash(./.devcontainer/update-proxy-filter.sh:*)",
      "Bash(env)",
      "WebFetch(domain:containers.dev)",
      "Bash(./build_image.sh:*)",
      "Bash(curl:*)",
      "WebFetch(domain:3proxy.ru)",
      "Bash(./initialize.sh:*)",
      "Bash(grep:*)",
      "Bash(DOCKER_HOST= docker compose -f .devcontainer/docker-compose.yaml build devcontainer)",
      "Bash(DOCKER_HOST= docker compose -f .devcontainer/docker-compose.yaml down)",
      "Bash(DOCKER_HOST= docker compose -f .devcontainer/docker-compose.yaml up -d)",
      "Bash(DOCKER_HOST= docker compose -f .devcontainer/docker-compose.yaml down tinyproxy)",
      "Bash(DOCKER_HOST= docker compose -f .devcontainer/docker-compose.yaml up -d tinyproxy)",
      "Bash(./build.sh)",
      "Bash(mkdir:*)",
      "Bash(DOCKER_HOST= docker compose down)",
      "Bash(DOCKER_HOST= docker compose up -d)",
      "Bash(./build.sh:*)",
      "Bash(DOCKER_HOST= docker compose build devcontainer)",
      "Bash(DOCKER_HOST= docker compose up -d --force-recreate devcontainer)",
      "Bash(DOCKER_HOST= docker compose up -d --force-recreate tinyproxy)",
      "Bash(cat:*)",
      "Bash(DOCKER_HOST= docker compose up -d devcontainer)",
      "Bash(tree:*)",
      "Bash(./install.sh)",
      "Bash(./tests/test-installation.sh:*)",
      "WebSearch",
      "Bash(time docker exec:*)",
      "Bash(/media/bas/repo/github/ai-agents-sandbox/host/ai-sbx worktree list)",
      "Bash(/media/bas/repo/github/ai-agents-sandbox/host/ai-sbx --help)",
      "Read(//tmp/test-project/.devcontainer/**)",
      "Read(//tmp/test-dotnet/.devcontainer/**)",
      "Bash(ai-sbx docker build:*)",
      "Bash(ai-sbx worktree create:*)",
      "Read(//media/bas/data/repo/github/ai-agents-sandbox-test-fixed-worktree-functionality/tasks/test-fixed-worktree-functionality/**)",
      "Bash(pip install:*)",
      "Bash(ai-sbx doctor:*)",
      "Read(//usr/local/share/ai-agents-sandbox/**)",
      "Bash(ai-sbx:*)",
      "Read(//media/bas/data/repo/github/ai-agents-sandbox-test-with-ide-flag/.devcontainer/**)",
      "Read(//tmp/test-dotnet/**)",
      "Bash(python -m pytest tests/ -v --tb=short)",
      "Bash(python -m pytest tests/ -v --tb=no)",
      "Bash(python -m pytest tests/test_cli.py::TestImageCommand::test_image_build_variants -v)",
      "Bash(python -m pytest tests/ --tb=no)",
      "Bash(python -m pytest tests/ --cov=src/ai_sbx --cov-report=term-missing)",
      "Bash(python -m pytest tests/ --tb=short)",
      "Bash(python -m pytest tests/test_templates.py::TestTemplateManager::test_generate_project_files -v)",
      "Bash(python -m pytest tests/test_image_commands.py::TestImageListCommand::test_list_no_images -v)",
      "Bash(python -m pytest tests/ --co -q)",
      "Read(//tmp/test-ai-sbx-project/**)",
      "Bash(git worktree:*)",
      "Read(//media/bas/data/repo/github/ai-agents-sandbox-workflow-1/.devcontainer/**)",
      "Read(//media/bas/data/repo/github/ai-agents-sandbox-workflow-4/.devcontainer/**)",
      "Bash(python:*)",
      "Bash(sed:*)"
    ],
    "deny": []
  }
}