services:
  # Core services - always running
  docker:
    image: docker:28-dind
    # container_name removed - let Docker Compose generate project-specific names
    privileged: true  # Required for DinD
    restart: unless-stopped
    environment:
      - HTTP_PROXY=${DIND_HTTP_PROXY:-http://tinyproxy-dind:8888}
      - HTTPS_PROXY=${DIND_HTTPS_PROXY:-http://tinyproxy-dind:8888}
      - NO_PROXY=${DIND_NO_PROXY:-localhost,127.0.0.1,::1,docker,tinyproxy-devcontainer,tinyproxy-dind}
      - http_proxy=${DIND_HTTP_PROXY:-http://tinyproxy-dind:8888}
      - https_proxy=${DIND_HTTPS_PROXY:-http://tinyproxy-dind:8888}
      - no_proxy=${DIND_NO_PROXY:-localhost,127.0.0.1,::1,docker,tinyproxy-devcontainer,tinyproxy-dind}
    env_file:
      - .env
      - .env.project
    volumes:
      - docker-certs-ca:/certs/ca
      - docker-certs-client:/certs/client
      - docker-data:/var/lib/docker
    tmpfs:
      - /run
      - /tmp
    networks:
      - claude-internal
    depends_on:
      - tinyproxy-dind

  # Proxy for devcontainer - uses upstream proxy if configured
  tinyproxy-devcontainer:
    image: tinyproxy-whitelist:latest
    # container_name removed - let Docker Compose generate project-specific names
    restart: unless-stopped
    environment:
      - UPSTREAM_SOCKS5=${UPSTREAM_SOCKS5:-}
      - UPSTREAM_HTTP=${UPSTREAM_HTTP:-}
      - UPSTREAM_PROXY_TYPE=${UPSTREAM_PROXY_TYPE:-}
      - UPSTREAM_PROXY_HOST=${UPSTREAM_PROXY_HOST:-}
      - UPSTREAM_PROXY_PORT=${UPSTREAM_PROXY_PORT:-}
    volumes:
      - ./whitelist.txt:/etc/tinyproxy/user-whitelist.txt:ro
      - proxy-devcontainer-logs:/var/log/tinyproxy
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - claude-internal
      - claude-external

  # Proxy for dind - no upstream, direct access to container registries only
  tinyproxy-dind:
    image: tinyproxy-dind:latest
    # container_name removed - let Docker Compose generate project-specific names
    restart: unless-stopped
    environment:
      # No upstream proxy for dind - direct access only
      - UPSTREAM_PROXY_TYPE=none
    volumes:
      - ./dind-whitelist.txt:/etc/tinyproxy/user-whitelist.txt:ro
      - proxy-dind-logs:/var/log/tinyproxy
    networks:
      - claude-internal
      - claude-external

  # Development container - for IDE integration
  # Uncomment or use with docker compose up devcontainer
  devcontainer:
    build:
      context: .
      dockerfile: Dockerfile
    # container_name removed - let Docker Compose generate project-specific names
    user: claude
    environment:
      - HTTP_PROXY=${DEVCONTAINER_HTTP_PROXY:-http://tinyproxy-devcontainer:8888}
      - HTTPS_PROXY=${DEVCONTAINER_HTTPS_PROXY:-http://tinyproxy-devcontainer:8888}
      - NO_PROXY=${DEVCONTAINER_NO_PROXY:-localhost,127.0.0.1,::1,docker,tinyproxy-devcontainer,tinyproxy-dind}
      - http_proxy=${DEVCONTAINER_HTTP_PROXY:-http://tinyproxy-devcontainer:8888}
      - https_proxy=${DEVCONTAINER_HTTPS_PROXY:-http://tinyproxy-devcontainer:8888}
      - no_proxy=${DEVCONTAINER_NO_PROXY:-localhost,127.0.0.1,::1,docker,tinyproxy-devcontainer,tinyproxy-dind}
    env_file: 
      - .env
      - .env.project
    volumes:
      - ..:/workspace
      - claude-code-config:/home/claude/.claude
      - ${HOME}/.claude:/host/.claude:ro
      - docker-certs-client:/certs/client:ro
      - ${HOME}/.p10k.zsh:/host/.p10k.zsh:ro
      # for get common statistics about all projects with tools like ccusage
      - ${HOME}/.claude/projects/:/home/claude/.claude/projects
      - zsh-history:/home/claude/.zsh_history_dir
      # for save codex settings between restarts
      - codex:/home/claude/.codex
      - cache:/home/claude/.cache
    ports:
      # OpenAI Codex auth
      - "1455:1455"
    working_dir: /workspace
    networks:
      - claude-internal
    depends_on:
      - docker
      - tinyproxy-devcontainer

volumes:
  docker-certs-ca:
  docker-certs-client:
  docker-data:
  proxy-devcontainer-logs:
  proxy-dind-logs:
  claude-code-config:
  zsh-history:
  codex:
  cache:

networks:
  claude-internal:
    driver: bridge
    internal: true  # Critical: blocks direct internet access
  claude-external:
    driver: bridge