name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v2.0.0)'
        required: true
        type: string

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      version: ${{ steps.version.outputs.version }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          VERSION="${{ inputs.version }}"
        else
          VERSION="${GITHUB_REF#refs/tags/}"
        fi
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "Version: ${VERSION}"

    - name: Generate changelog
      id: changelog
      run: |
        # Generate changelog from git history
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [[ -n "$PREVIOUS_TAG" ]]; then
          echo "Previous tag: $PREVIOUS_TAG"
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" ${PREVIOUS_TAG}..HEAD)
        else
          CHANGELOG=$(git log --pretty=format:"- %s (%h)" HEAD~20..HEAD)
        fi
        
        # Write to file for upload
        cat > CHANGELOG.md << EOF
        ## What's Changed
        
        ${CHANGELOG}
        
        ## Installation
        
        \`\`\`bash
        # Using uv (recommended)
        uv pip install ai-sbx==${{ steps.version.outputs.version }}
        
        # Using pip
        pip install ai-sbx==${{ steps.version.outputs.version }}
        \`\`\`
        
        ## Docker Images
        
        The following Docker images are available for this release:
        - \`ghcr.io/\${{ github.repository_owner }}/ai-agents-sandbox/base:${{ steps.version.outputs.version }}\`
        - \`ghcr.io/\${{ github.repository_owner }}/ai-agents-sandbox/python:${{ steps.version.outputs.version }}\`
        - \`ghcr.io/\${{ github.repository_owner }}/ai-agents-sandbox/nodejs:${{ steps.version.outputs.version }}\`
        - \`ghcr.io/\${{ github.repository_owner }}/ai-agents-sandbox/dotnet:${{ steps.version.outputs.version }}\`
        - \`ghcr.io/\${{ github.repository_owner }}/ai-agents-sandbox/golang:${{ steps.version.outputs.version }}\`
        
        **Full Changelog**: https://github.com/\${{ github.repository }}/compare/${PREVIOUS_TAG}...${{ steps.version.outputs.version }}
        EOF
        
        echo "changelog_file=CHANGELOG.md" >> $GITHUB_OUTPUT

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        release_name: Release ${{ steps.version.outputs.version }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, 'rc') || contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'alpha') }}

  build-and-upload:
    needs: create-release
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build distribution
      run: |
        python -m build

    - name: Upload wheel to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/ai_sbx-*.whl
        asset_name: ai_sbx-${{ needs.create-release.outputs.version }}-py3-none-any.whl
        asset_content_type: application/zip

    - name: Upload sdist to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./dist/ai-sbx-*.tar.gz
        asset_name: ai-sbx-${{ needs.create-release.outputs.version }}.tar.gz
        asset_content_type: application/gzip

  trigger-publish:
    needs: build-and-upload
    runs-on: ubuntu-latest

    steps:
    - name: Trigger PyPI publish
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'publish.yml',
            ref: context.ref,
            inputs: {
              test_pypi: 'false'
            }
          })

    - name: Trigger Docker build
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'docker.yml',
            ref: context.ref,
            inputs: {
              push_images: 'true'
            }
          })